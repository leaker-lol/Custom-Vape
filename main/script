local HWIDTable = loadstring(game:HttpGet("https://raw.githubusercontent.com/leaker-lol/Custom-Vape/main/main/whitelist.json"))()
local HWID =(game:GetService("RbxAnalyticsService"):GetClientId())
for i,v in pairs(HWIDTable) do
	print(v)
	if v == HWID then
		loadstring(game:HttpGet("https://raw.githubusercontent.com/7GrandDadPGN/VapeV4ForRoblox/main/NewMainScript.lua", true))()
		wait(0.5)
		repeat task.wait() until shared.GuiLibrary
		local GuiLibrary = shared.GuiLibrary
		local COB = function(tab, argstable) 
			return GuiLibrary["ObjectsThatCanBeSaved"][tab.."Window"]["Api"].CreateOptionsButton(argstable)
		end

		COB("World", {
			Name = "Night",
			Function = function(v)
				if v then
					game.Lighting.TimeOfDay = "00:00:00"
				else
					game.Lighting.TimeOfDay = "13:00:00"
				end
			end
		})



		COB("Render", {
			Name = "Godmode",
			Function = function(v)
				if v then
					local c = game.Players.LocalPlayer.Character
					c.Parent = nil
					c.HumanoidRootPart:Destroy()
					c.Parent = game.workspace
				end
			end
		})

		COB("World", {
			Name = "infinite Yiff loader",
			Function = function(v)
				if v then
					loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
				end
			end
		})

		COB("Utility", {
			Name = "rektsky",
			Function = function(callback) 
				if callback then
					pcall(function() 
						loadstring(game:HttpGet("https://raw.githubusercontent.com/8pmX8/rektsky4roblox/main/mainscript.lua"))()
					end) 
				end
			end,
			HoverText = "loads rektsky"
		})


		COB("Utility", {
			Name = "future",
			Function = function(callback) 
				if callback then
					pcall(function() 
						loadstring(game:HttpGet('https://raw.githubusercontent.com/joeengo/Future/main/loadstring.lua', true))() 
					end) 
				end
			end,
			HoverText = "loads future"
		})


		
		 


		COB("World", {
			Name = "Blood",
			Function = function(v)
				if v then
					game.Lighting.Ambient = Color3.fromRGB(255,0,0)
					game.Lighting.OutdoorAmbient = Color3.fromRGB(0, 0, 0)
				else
					game.Lighting.Ambient = Color3.fromRGB(91, 91, 91)
					game.Lighting.OutdoorAmbient = Color3.fromRGB(201, 201, 201)
				end
			end
		})



		COB("World", {
			Name = "Ocean",
			Function = function(v)
				if v then
					game.Lighting.Ambient = Color3.fromRGB(0,0,255)
					game.Lighting.OutdoorAmbient = Color3.fromRGB(0, 0, 0)
				else
					game.Lighting.Ambient = Color3.fromRGB(91, 91, 91)
					game.Lighting.OutdoorAmbient = Color3.fromRGB(201, 201, 201)
				end
			end
		})


		COB("World", {
			Name = "grass",
			Function = function(v)
				if v then
					game.Lighting.Ambient = Color3.fromRGB(0,255,0)
					game.Lighting.OutdoorAmbient = Color3.fromRGB(0, 0, 0)
				else
					game.Lighting.Ambient = Color3.fromRGB(91, 91, 91)
					game.Lighting.OutdoorAmbient = Color3.fromRGB(201, 201, 201)
				end
			end
		})
		
		
		COB("World", {
			Name = "RektskyAmbience",
			Function = function(v)
				if v then
					wait(0.1)
					game.Lighting.Ambient = Color3.fromRGB(0, 255, 255)
					game.Lighting.OutdoorAmbient = Color3.fromRGB(0, 0, 0)
				else
					game.Lighting.Ambient = Color3.fromRGB(91, 91, 91)
					game.Lighting.OutdoorAmbient = Color3.fromRGB(201, 201, 201)
				end
			end
		})
		
		
		COB("Render", {
			Name = "AutoBlockKillAura",
			function(v)
				if v and entity.isAlive then
					connectionkaurablock = game:GetService("RunService").Stepped:connect(function()
						spawn(function()
							task.wait()
							if not v then
								connectionkaurablock:Disconnect()
								return 
							end
							Client:Get(ShieldRemote):SendToServer({["raised"] = true})
							KillauraRemote()
						end)
					end)
				else
					connectionkaurablock:Disconnect()
					return
				end
			end
		})


COB("Blatant", {
	Name = "HypixelFly",
	Function = function(v)
        longjumpval = v
        if longjumpval then
            workspace.Gravity = 0
            spawn(function()
                repeat
                    if (not longjumpval) then return end
                    lplr.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
                    wait(0.1)
                    lplr.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Running)
                    wait(0.1)
                    lplr.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Climbing)
                    wait(0.1)
                    lplr.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
                    wait(0.1)
                    lplr.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Landed)
                    wait(0.1)
                until (not longjumpval)
            end)
        else
            workspace.Gravity = 196.19999694824
            return
        end
    end
})

COB("Blatant", {
	Name = "FlyGravity",
	Function = function(v)
        if v == true then
            workspace.Gravity = 10
        else
            workspace.Gravity = 196.19999694824
        end
    end
})
   end
end


COB("Utility", {
        Name = "AcDisabler"
        Function = function(v)
while true do 
    wait(0.1) 
    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = {
        ["player"] = game:GetService("Players").LocalPlayer
    }
}

game:GetService("ReplicatedStorage").rbxts_include.node_modules.net.out._NetManaged.RocktBeltUsed:FireServer(unpack(args))
end
end

COB("Blatant", {
        Name = "TpAura"
        Function = function(s)
local TpAura
local tpauralmao
	if state then
		TpAura = state
        repeat task.wait() until (matchState == 1)
        secondclonemake()
        if matchState == 1 then
            spawn(function()
                if TpAura and entity.isAlive then
                    if entity.isAlive then
                        repeat
                            wait()
                            if (not TpAura) then return end
                            spawn(function()
                                wait()
                                local mouse = game.Players.LocalPlayer:GetMouse()
                                for i,v in pairs(game.Players:GetChildren()) do
                                    if v.Character and v.Name ~= game.Players.LocalPlayer.Name and v.Character:FindFirstChild("HumanoidRootPart") then
                                        local mag = (v.Character.HumanoidRootPart.Position - clonetwo.HumanoidRootPart.Position).Magnitude
                                        if mag <= 20 and v.Team ~= game.Players.LocalPlayer.Team and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health > 0 then
                                            if v.Character:FindFirstChild("Head") then
                                                game:GetService("ReplicatedStorage").rbxts_include.node_modules.net.out._NetManaged[landmineremote]:FireServer({
                                                    ["invisibleLandmine"] = v.Character.Head                                        
                                                })
                                            end
                                        end
                                    end
                                end 
                            end)
                            spawn(function()
                                local plrthing = GetAllNearestHumanoidToPosition(600, 1)
                                for i, plr in pairs(plrthing) do
                                    clonetwo.HumanoidRootPart.CFrame = plr.Character.HumanoidRootPart.CFrame
                                    wait(0.6)
                                    clonetwo.HumanoidRootPart.CFrame = clone.HumanoidRootPart.CFrame
                                    wait(0.6)
                                end
                            end)
                            spawn(function()
                                repeat task.wait() until (matchState == 2)
                                tpauralmao:Toggle()
                            end)
                        until (not TpAura)
                    end
                else
                    clonetwo:remove()
                    return
                end
            end)
        end
    end
end)
